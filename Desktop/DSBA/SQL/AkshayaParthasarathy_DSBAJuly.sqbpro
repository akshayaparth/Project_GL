<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/aksha/Desktop/DSBA/SQL/New Orders.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1901"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,7:mainADDRESS"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="ADDRESS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="1" mode="0"/></sort><column_widths><column index="1" value="90"/><column index="2" value="300"/><column index="3" value="261"/><column index="4" value="111"/><column index="5" value="98"/><column index="6" value="62"/><column index="7" value="66"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="CARTON" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="81"/><column index="2" value="40"/><column index="3" value="51"/><column index="4" value="53"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ONLINE_CUSTOMER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="97"/><column index="2" value="125"/><column index="3" value="126"/><column index="4" value="176"/><column index="5" value="124"/><column index="6" value="90"/><column index="7" value="187"/><column index="8" value="151"/><column index="9" value="131"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ORDER_HEADER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="73"/><column index="2" value="97"/><column index="3" value="92"/><column index="4" value="107"/><column index="5" value="112"/><column index="6" value="109"/><column index="7" value="163"/><column index="8" value="84"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ORDER_ITEMS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="73"/><column index="2" value="88"/><column index="3" value="137"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PRODUCT" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="88"/><column index="2" value="300"/><column index="3" value="156"/><column index="4" value="111"/><column index="5" value="186"/><column index="6" value="40"/><column index="7" value="51"/><column index="8" value="53"/><column index="9" value="57"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PRODUCT_CLASS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="156"/><column index="2" value="155"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="Akshaya_neworders">--1. Write a query to Display the product details(product_class_code,product_id,product_desc,product_price)as per the following criteria and sort them in descending order of category:
-- 			a. If the category is 2050, increase the price by 2000
-- 			b. If the category is 2051, increase the price by 500
--  		c. If the category is 2052, increase the price by 600

select PRODUCT_CLASS_CODE,PRODUCT_ID,PRODUCT_DESC,
CASE WHEN PRODUCT_CLASS_CODE = 2050 THEN (PRODUCT_PRICE + 2000)
WHEN PRODUCT_CLASS_CODE = 2051 THEN (PRODUCT_PRICE + 500)
WHEN PRODUCT_CLASS_CODE = 2052 THEN (PRODUCT_PRICE + 600)
ELSE PRODUCT_PRICE
END as PRICE
FROM PRODUCT
ORDER by PRODUCT_CLASS_CODE desc;


--2. Write a query to display (product_class_desc, product_id, product_desc, product_quantity_avail ) and Show inventory status of products as below as per their available quantity:
-- a. For Electronics and Computer categories, if available quantity is &lt;= 10, show 'Low stock', 11 &lt;= qty &lt;= 30, show 'In stock', &gt;= 31, show 'Enough stock'
-- b. For Stationery and Clothes categories, if qty &lt;= 20, show 'Low stock', 21 &lt;= qty &lt;=80, show 'In stock', &gt;= 81, show 'Enough stock'
-- c. Rest of the categories, if qty &lt;= 15 – 'Low Stock', 16 &lt;= qty &lt;= 50 – 'In Stock', &gt;= 51 – 'Enough stock'
-- For all categories, if available quantity is 0, show 'Out of stock'.

SELECT pc.PRODUCT_CLASS_DESC, PRODUCT_ID, PRODUCT_DESC, PRODUCT_QUANTITY_AVAIL,
CASE WHEN PRODUCT_CLASS_DESC in('Electronics','Computer')
	THEN	CASE WHEN PRODUCT_QUANTITY_AVAIL &lt;= 10 THEN 'Low stock'
			 WHEN PRODUCT_QUANTITY_AVAIL BETWEEN 11 and 30 THEN 'In stock'
			 WHEN PRODUCT_QUANTITY_AVAIL &gt;= 31 THEN 'Enough stock'
			 ELSE 'No stock'
			 END
	WHEN PRODUCT_CLASS_DESC in ('Stationery','Clothes')
	THEN	CASE WHEN PRODUCT_QUANTITY_AVAIL &lt;= 20 THEN 'Low stock'
			 WHEN PRODUCT_QUANTITY_AVAIL BETWEEN 21 and 80 THEN 'In stock'
			 WHEN PRODUCT_QUANTITY_AVAIL &gt;= 81 THEN 'Enough stock'
			 ELSE 'No stock'
			 END
	ELSE
		CASE WHEN PRODUCT_QUANTITY_AVAIL &lt;= 15 THEN 'Low stock'
			 WHEN PRODUCT_QUANTITY_AVAIL BETWEEN 16 and 50 THEN 'In stock'
			 WHEN PRODUCT_QUANTITY_AVAIL &gt;= 51 THEN 'Enough stock'
			 ELSE 'No stock'
			 END
END as INVENTORY_STATUS
FROM PRODUCT p 
INNER JOIN PRODUCT_CLASS pc on pc.PRODUCT_CLASS_CODE = p.PRODUCT_CLASS_CODE;

--3. Write a query to Show the count of cities in all countries other than USA &amp; MALAYSIA, with more than 1 city, in the descending order of CITIES.

select country, count(CITY) as CITIES
FROM ADDRESS WHERE COUNTRY NOT in ('USA','Malaysia')
GROUP by COUNTRY
HAVING count(city) &gt; 1
ORDER by CITIES desc;

--4. Write a query to display the customer_id,customer full name ,city,pincode,and order details (order id,order date, product class desc, product desc, 
--   subtotal(product_quantity * product_price)) for orders shipped to cities whose pin codes do not have any 0s in them. Sort the output on customer 
--   name, order date and subtotal.

SELECT c.CUSTOMER_ID, c.CUSTOMER_FNAME||' '|| c.CUSTOMER_LNAME as 'Full_Name', a.CITY, a.PINCODE,oi.ORDER_ID, oh.ORDER_DATE, oi.PRODUCT_ID, p.PRODUCT_DESC, pc.PRODUCT_CLASS_DESC,
		(oi.PRODUCT_QUANTITY* p.PRODUCT_PRICE) as sub_total
FROM ORDER_ITEMS oi
INNER JOIN ORDER_HEADER oh on oh.ORDER_ID = oi.ORDER_ID
INNER JOIN ONLINE_CUSTOMER c on c.CUSTOMER_ID = oh.CUSTOMER_ID
INNER JOIN ADDRESS a on c.ADDRESS_ID = a.ADDRESS_ID
INNER JOIN PRODUCT p on p.PRODUCT_ID = oi.PRODUCT_ID
INNER JOIN PRODUCT_CLASS pc on p.PRODUCT_CLASS_CODE = pc.PRODUCT_CLASS_CODE
WHERE oh.ORDER_STATUS = 'Shipped' and a.PINCODE NOT like '%0%'
ORDER by Full_Name, oh.ORDER_DATE, sub_total;

--5. Write a Query to display product id,product description,totalquantity(sum(product quantity) for an item which has been bought maximum no. of times along with product id 201.

SELECT o.ORDER_ID, p.PRODUCT_ID, PRODUCT_DESC, sum(PRODUCT_QUANTITY) as TOTAL_QUANTITY
FROM PRODUCT p
INNER JOIN ORDER_ITEMS o on o.PRODUCT_ID = p.PRODUCT_ID
WHERE o.ORDER_ID in (SELECT ORDER_ID from ORDER_ITEMS where PRODUCT_ID ='201')
GROUP by ORDER_ID, o.PRODUCT_ID
ORDER by total_quantity desc limit 1;

--6. Write a query to display the customer_id,customer name, email and order details (order id,  product desc,product qty, subtotal(product_quantity * product_price)) 
--   for all customers even if they have not ordered any item

SELECT c.CUSTOMER_ID, c.CUSTOMER_FNAME||' '|| c.CUSTOMER_LNAME as CUSTOMER_NAME, c.CUSTOMER_EMAIL, oi.ORDER_ID, p.PRODUCT_DESC, oi.PRODUCT_QUANTITY, p.PRODUCT_PRICE,
		(oi.PRODUCT_QUANTITY * p.PRODUCT_PRICE) as SUB_TOTAL
FROM ONLINE_CUSTOMER c
LEFT JOIN ORDER_HEADER oh on oh.CUSTOMER_ID = c.CUSTOMER_ID
LEFT JOIN ORDER_ITEMS oi on oi.ORDER_ID = oh.ORDER_ID
LEFT JOIN PRODUCT p on p.PRODUCT_ID = oi.PRODUCT_ID;







</sql><current_tab id="0"/></tab_sql></sqlb_project>
